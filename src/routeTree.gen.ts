/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AboutRouteImport } from './routes/about'
import { Route as MainRouteRouteImport } from './routes/$main/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as MainIndexRouteImport } from './routes/$main/index'
import { Route as MainStoreStockReportRouteImport } from './routes/$main/store/stock-report'
import { Route as MainStoreRequestDeliveryRouteImport } from './routes/$main/store/request-delivery'
import { Route as MainStoreReceivingDeliveriesRouteImport } from './routes/$main/store/receiving-deliveries'
import { Route as MainStoreEndOfDayReportRouteImport } from './routes/$main/store/end-of-day-report'
import { Route as MainOrdersUpdateAnOrderRouteImport } from './routes/$main/orders/update-an-order'
import { Route as MainOrdersOrdersAtShowroomRouteImport } from './routes/$main/orders/orders-at-showroom'
import { Route as MainOrdersNewWorkOrderRouteImport } from './routes/$main/orders/new-work-order'
import { Route as MainOrdersNewSalesOrderRouteImport } from './routes/$main/orders/new-sales-order'
import { Route as MainOrdersNewAlterationOrderRouteImport } from './routes/$main/orders/new-alteration-order'
import { Route as MainOrdersCustomerProfilesOrdersRouteImport } from './routes/$main/orders/customer-profiles-orders'

const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const MainRouteRoute = MainRouteRouteImport.update({
  id: '/$main',
  path: '/$main',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const MainIndexRoute = MainIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MainRouteRoute,
} as any)
const MainStoreStockReportRoute = MainStoreStockReportRouteImport.update({
  id: '/store/stock-report',
  path: '/store/stock-report',
  getParentRoute: () => MainRouteRoute,
} as any)
const MainStoreRequestDeliveryRoute =
  MainStoreRequestDeliveryRouteImport.update({
    id: '/store/request-delivery',
    path: '/store/request-delivery',
    getParentRoute: () => MainRouteRoute,
  } as any)
const MainStoreReceivingDeliveriesRoute =
  MainStoreReceivingDeliveriesRouteImport.update({
    id: '/store/receiving-deliveries',
    path: '/store/receiving-deliveries',
    getParentRoute: () => MainRouteRoute,
  } as any)
const MainStoreEndOfDayReportRoute = MainStoreEndOfDayReportRouteImport.update({
  id: '/store/end-of-day-report',
  path: '/store/end-of-day-report',
  getParentRoute: () => MainRouteRoute,
} as any)
const MainOrdersUpdateAnOrderRoute = MainOrdersUpdateAnOrderRouteImport.update({
  id: '/orders/update-an-order',
  path: '/orders/update-an-order',
  getParentRoute: () => MainRouteRoute,
} as any)
const MainOrdersOrdersAtShowroomRoute =
  MainOrdersOrdersAtShowroomRouteImport.update({
    id: '/orders/orders-at-showroom',
    path: '/orders/orders-at-showroom',
    getParentRoute: () => MainRouteRoute,
  } as any)
const MainOrdersNewWorkOrderRoute = MainOrdersNewWorkOrderRouteImport.update({
  id: '/orders/new-work-order',
  path: '/orders/new-work-order',
  getParentRoute: () => MainRouteRoute,
} as any)
const MainOrdersNewSalesOrderRoute = MainOrdersNewSalesOrderRouteImport.update({
  id: '/orders/new-sales-order',
  path: '/orders/new-sales-order',
  getParentRoute: () => MainRouteRoute,
} as any)
const MainOrdersNewAlterationOrderRoute =
  MainOrdersNewAlterationOrderRouteImport.update({
    id: '/orders/new-alteration-order',
    path: '/orders/new-alteration-order',
    getParentRoute: () => MainRouteRoute,
  } as any)
const MainOrdersCustomerProfilesOrdersRoute =
  MainOrdersCustomerProfilesOrdersRouteImport.update({
    id: '/orders/customer-profiles-orders',
    path: '/orders/customer-profiles-orders',
    getParentRoute: () => MainRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$main': typeof MainRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/$main/': typeof MainIndexRoute
  '/$main/orders/customer-profiles-orders': typeof MainOrdersCustomerProfilesOrdersRoute
  '/$main/orders/new-alteration-order': typeof MainOrdersNewAlterationOrderRoute
  '/$main/orders/new-sales-order': typeof MainOrdersNewSalesOrderRoute
  '/$main/orders/new-work-order': typeof MainOrdersNewWorkOrderRoute
  '/$main/orders/orders-at-showroom': typeof MainOrdersOrdersAtShowroomRoute
  '/$main/orders/update-an-order': typeof MainOrdersUpdateAnOrderRoute
  '/$main/store/end-of-day-report': typeof MainStoreEndOfDayReportRoute
  '/$main/store/receiving-deliveries': typeof MainStoreReceivingDeliveriesRoute
  '/$main/store/request-delivery': typeof MainStoreRequestDeliveryRoute
  '/$main/store/stock-report': typeof MainStoreStockReportRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/$main': typeof MainIndexRoute
  '/$main/orders/customer-profiles-orders': typeof MainOrdersCustomerProfilesOrdersRoute
  '/$main/orders/new-alteration-order': typeof MainOrdersNewAlterationOrderRoute
  '/$main/orders/new-sales-order': typeof MainOrdersNewSalesOrderRoute
  '/$main/orders/new-work-order': typeof MainOrdersNewWorkOrderRoute
  '/$main/orders/orders-at-showroom': typeof MainOrdersOrdersAtShowroomRoute
  '/$main/orders/update-an-order': typeof MainOrdersUpdateAnOrderRoute
  '/$main/store/end-of-day-report': typeof MainStoreEndOfDayReportRoute
  '/$main/store/receiving-deliveries': typeof MainStoreReceivingDeliveriesRoute
  '/$main/store/request-delivery': typeof MainStoreRequestDeliveryRoute
  '/$main/store/stock-report': typeof MainStoreStockReportRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/$main': typeof MainRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/$main/': typeof MainIndexRoute
  '/$main/orders/customer-profiles-orders': typeof MainOrdersCustomerProfilesOrdersRoute
  '/$main/orders/new-alteration-order': typeof MainOrdersNewAlterationOrderRoute
  '/$main/orders/new-sales-order': typeof MainOrdersNewSalesOrderRoute
  '/$main/orders/new-work-order': typeof MainOrdersNewWorkOrderRoute
  '/$main/orders/orders-at-showroom': typeof MainOrdersOrdersAtShowroomRoute
  '/$main/orders/update-an-order': typeof MainOrdersUpdateAnOrderRoute
  '/$main/store/end-of-day-report': typeof MainStoreEndOfDayReportRoute
  '/$main/store/receiving-deliveries': typeof MainStoreReceivingDeliveriesRoute
  '/$main/store/request-delivery': typeof MainStoreRequestDeliveryRoute
  '/$main/store/stock-report': typeof MainStoreStockReportRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$main'
    | '/about'
    | '/$main/'
    | '/$main/orders/customer-profiles-orders'
    | '/$main/orders/new-alteration-order'
    | '/$main/orders/new-sales-order'
    | '/$main/orders/new-work-order'
    | '/$main/orders/orders-at-showroom'
    | '/$main/orders/update-an-order'
    | '/$main/store/end-of-day-report'
    | '/$main/store/receiving-deliveries'
    | '/$main/store/request-delivery'
    | '/$main/store/stock-report'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/$main'
    | '/$main/orders/customer-profiles-orders'
    | '/$main/orders/new-alteration-order'
    | '/$main/orders/new-sales-order'
    | '/$main/orders/new-work-order'
    | '/$main/orders/orders-at-showroom'
    | '/$main/orders/update-an-order'
    | '/$main/store/end-of-day-report'
    | '/$main/store/receiving-deliveries'
    | '/$main/store/request-delivery'
    | '/$main/store/stock-report'
  id:
    | '__root__'
    | '/'
    | '/$main'
    | '/about'
    | '/$main/'
    | '/$main/orders/customer-profiles-orders'
    | '/$main/orders/new-alteration-order'
    | '/$main/orders/new-sales-order'
    | '/$main/orders/new-work-order'
    | '/$main/orders/orders-at-showroom'
    | '/$main/orders/update-an-order'
    | '/$main/store/end-of-day-report'
    | '/$main/store/receiving-deliveries'
    | '/$main/store/request-delivery'
    | '/$main/store/stock-report'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  MainRouteRoute: typeof MainRouteRouteWithChildren
  AboutRoute: typeof AboutRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$main': {
      id: '/$main'
      path: '/$main'
      fullPath: '/$main'
      preLoaderRoute: typeof MainRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$main/': {
      id: '/$main/'
      path: '/'
      fullPath: '/$main/'
      preLoaderRoute: typeof MainIndexRouteImport
      parentRoute: typeof MainRouteRoute
    }
    '/$main/store/stock-report': {
      id: '/$main/store/stock-report'
      path: '/store/stock-report'
      fullPath: '/$main/store/stock-report'
      preLoaderRoute: typeof MainStoreStockReportRouteImport
      parentRoute: typeof MainRouteRoute
    }
    '/$main/store/request-delivery': {
      id: '/$main/store/request-delivery'
      path: '/store/request-delivery'
      fullPath: '/$main/store/request-delivery'
      preLoaderRoute: typeof MainStoreRequestDeliveryRouteImport
      parentRoute: typeof MainRouteRoute
    }
    '/$main/store/receiving-deliveries': {
      id: '/$main/store/receiving-deliveries'
      path: '/store/receiving-deliveries'
      fullPath: '/$main/store/receiving-deliveries'
      preLoaderRoute: typeof MainStoreReceivingDeliveriesRouteImport
      parentRoute: typeof MainRouteRoute
    }
    '/$main/store/end-of-day-report': {
      id: '/$main/store/end-of-day-report'
      path: '/store/end-of-day-report'
      fullPath: '/$main/store/end-of-day-report'
      preLoaderRoute: typeof MainStoreEndOfDayReportRouteImport
      parentRoute: typeof MainRouteRoute
    }
    '/$main/orders/update-an-order': {
      id: '/$main/orders/update-an-order'
      path: '/orders/update-an-order'
      fullPath: '/$main/orders/update-an-order'
      preLoaderRoute: typeof MainOrdersUpdateAnOrderRouteImport
      parentRoute: typeof MainRouteRoute
    }
    '/$main/orders/orders-at-showroom': {
      id: '/$main/orders/orders-at-showroom'
      path: '/orders/orders-at-showroom'
      fullPath: '/$main/orders/orders-at-showroom'
      preLoaderRoute: typeof MainOrdersOrdersAtShowroomRouteImport
      parentRoute: typeof MainRouteRoute
    }
    '/$main/orders/new-work-order': {
      id: '/$main/orders/new-work-order'
      path: '/orders/new-work-order'
      fullPath: '/$main/orders/new-work-order'
      preLoaderRoute: typeof MainOrdersNewWorkOrderRouteImport
      parentRoute: typeof MainRouteRoute
    }
    '/$main/orders/new-sales-order': {
      id: '/$main/orders/new-sales-order'
      path: '/orders/new-sales-order'
      fullPath: '/$main/orders/new-sales-order'
      preLoaderRoute: typeof MainOrdersNewSalesOrderRouteImport
      parentRoute: typeof MainRouteRoute
    }
    '/$main/orders/new-alteration-order': {
      id: '/$main/orders/new-alteration-order'
      path: '/orders/new-alteration-order'
      fullPath: '/$main/orders/new-alteration-order'
      preLoaderRoute: typeof MainOrdersNewAlterationOrderRouteImport
      parentRoute: typeof MainRouteRoute
    }
    '/$main/orders/customer-profiles-orders': {
      id: '/$main/orders/customer-profiles-orders'
      path: '/orders/customer-profiles-orders'
      fullPath: '/$main/orders/customer-profiles-orders'
      preLoaderRoute: typeof MainOrdersCustomerProfilesOrdersRouteImport
      parentRoute: typeof MainRouteRoute
    }
  }
}

interface MainRouteRouteChildren {
  MainIndexRoute: typeof MainIndexRoute
  MainOrdersCustomerProfilesOrdersRoute: typeof MainOrdersCustomerProfilesOrdersRoute
  MainOrdersNewAlterationOrderRoute: typeof MainOrdersNewAlterationOrderRoute
  MainOrdersNewSalesOrderRoute: typeof MainOrdersNewSalesOrderRoute
  MainOrdersNewWorkOrderRoute: typeof MainOrdersNewWorkOrderRoute
  MainOrdersOrdersAtShowroomRoute: typeof MainOrdersOrdersAtShowroomRoute
  MainOrdersUpdateAnOrderRoute: typeof MainOrdersUpdateAnOrderRoute
  MainStoreEndOfDayReportRoute: typeof MainStoreEndOfDayReportRoute
  MainStoreReceivingDeliveriesRoute: typeof MainStoreReceivingDeliveriesRoute
  MainStoreRequestDeliveryRoute: typeof MainStoreRequestDeliveryRoute
  MainStoreStockReportRoute: typeof MainStoreStockReportRoute
}

const MainRouteRouteChildren: MainRouteRouteChildren = {
  MainIndexRoute: MainIndexRoute,
  MainOrdersCustomerProfilesOrdersRoute: MainOrdersCustomerProfilesOrdersRoute,
  MainOrdersNewAlterationOrderRoute: MainOrdersNewAlterationOrderRoute,
  MainOrdersNewSalesOrderRoute: MainOrdersNewSalesOrderRoute,
  MainOrdersNewWorkOrderRoute: MainOrdersNewWorkOrderRoute,
  MainOrdersOrdersAtShowroomRoute: MainOrdersOrdersAtShowroomRoute,
  MainOrdersUpdateAnOrderRoute: MainOrdersUpdateAnOrderRoute,
  MainStoreEndOfDayReportRoute: MainStoreEndOfDayReportRoute,
  MainStoreReceivingDeliveriesRoute: MainStoreReceivingDeliveriesRoute,
  MainStoreRequestDeliveryRoute: MainStoreRequestDeliveryRoute,
  MainStoreStockReportRoute: MainStoreStockReportRoute,
}

const MainRouteRouteWithChildren = MainRouteRoute._addFileChildren(
  MainRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  MainRouteRoute: MainRouteRouteWithChildren,
  AboutRoute: AboutRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
